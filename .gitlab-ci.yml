# .gitlab-ci.yml
#
# ink
#
# pipelines can be triggered manually in the web
# any random shit, want to test branch creation


stages:
  - check
  - workspace
  - examples
  - publish

variables:
  GIT_STRATEGY:                    fetch
  GIT_DEPTH:                       100
  CARGO_HOME:                      "/ci-cache/${CI_PROJECT_NAME}/cargo/${CI_JOB_NAME}"
  CARGO_TARGET_DIR:                "/ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME}/${CI_JOB_NAME}"
  CI_SERVER_NAME:                  "GitLab CI"
  REGISTRY:                        registry.parity.io/parity/infrastructure/scripts
  ALL_CRATES:                      "core alloc prelude primitives lang lang/macro"

.collect-artifacts:                &collect-artifacts
  artifacts:
    name:                          "${CI_JOB_NAME}_${CI_COMMIT_REF_NAME}"
    when:                          on_success
    expire_in:                     7 days
    paths:
      - artifacts/

.docker-env:                       &docker-env
  image:                           ${REGISTRY}/ink-ci-linux:latest
  before_script:
    - cargo -vV
    - rustc -vV
    - rustup show
    - bash --version
    - mkdir -p ${CARGO_HOME}; touch ${CARGO_HOME}/config
    # global RUSTFLAGS overrides the linker args so this way is better to pass the flags
    - printf '[build]\nrustflags = ["-C", "link-dead-code"]\n' | tee ${CARGO_HOME}/config
    # if there is no directory for this $CI_COMMIT_REF_NAME/$CI_JOB_NAME
    # create such directory and
    # create hardlinks recursively of all the files from the master/$CI_JOB_NAME if it exists
    - if [[ ! -d $CARGO_TARGET_DIR ]]; then
        mkdir -p /ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME};
        cp -al /ci-cache/${CI_PROJECT_NAME}/targets/${CI_DEFAULT_BRANCH}/${CI_JOB_NAME}
          /ci-cache/${CI_PROJECT_NAME}/targets/${CI_COMMIT_REF_NAME} ||
          echo "_____No such target dir, proceeding from scratch_____";
      fi
    - sccache -s
  only:
    - master
    - /^v[0-9]+\.[0-9]+.*$/        # i.e. v1.0, v2.1rc1
    - schedules
    - web
    - /^[0-9]+$/                   # PRs
    - branches
    - trying
    - staging
  dependencies:                    []
  interruptible:                   true
  retry:
    max: 2
    when:
      - runner_system_failure
      - unknown_failure
      - api_failure
  tags:
    - ci3


#### stage:                        check

check-std:
  stage:                           check
  <<:                              *docker-env
  script:
    - for crate in ${ALL_CRATES}; do
        cargo check --verbose --all-features --manifest-path ${crate}/Cargo.toml;
      done

#### stage:                        workspace

build-std:
  stage:                           workspace
  <<:                              *docker-env
  needs:
    - check-std
  script:
    - for crate in ${ALL_CRATES}; do
        cargo build --verbose --all-features --release --manifest-path ${crate}/Cargo.toml;
      done

#### stage:                        examples

examples-test:
  stage:                           examples
  <<:                              *docker-env
  script:
    - for example in examples/*/; do
        cargo test --verbose --manifest-path ${example}/Cargo.toml;
      done
