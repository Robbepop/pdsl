[package]
name = "ink_core"
version = "2.1.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

license = "APACHE-2.0"
readme = "README.md"
repository = "https://github.com/paritytech/ink"
documentation = "https://substrate.dev/substrate-contracts-workshop/#/"
homepage = "https://www.parity.io/"
description = "[ink!] Rust based eDSL for writing smart contracts for Substrate"
keywords = ["wasm", "parity", "webassembly", "blockchain", "edsl"]
categories = ["no-std", "embedded"]
include = ["Cargo.toml", "src/**/*.rs", "README.md", "LICENSE"]

[dependencies]
ink_metadata = { version = "2.1.0", path = "../metadata/", default-features = false, features = ["derive"], optional = true }
ink_alloc = { version = "2.1.0", path = "../alloc/", default-features = false }
ink_primitives = { version = "2.1.0", path = "../primitives/", default-features = false }
ink_core_derive = { version = "2.1.0", path = "derive", default-features = false }
ink_prelude = { version = "2.1.0", path = "../prelude/", default-features = false }

scale = { package = "parity-scale-codec", version = "1.3", default-features = false, features = ["derive", "full"] }
derive_more = { version = "0.99", default-features = false, features = ["from", "display"] }
num-traits = { version = "0.2", default-features = false, features = ["i128"] }
cfg-if = "0.1"
array-init = "0.1"
generic-array = "0.14.1"
paste = "0.1"

# Hashes for the off-chain environment.
sha2 = { version = "0.9", optional = true }
sha3 = { version = "0.9", optional = true }
blake2 = { version = "0.9", optional = true }

# Only used in the off-chain environment.
#
# Sadly couldn't be marked as dev-dependency.
# Never use this crate outside of the off-chain environment!
rand = { version = "0.7", default-features = false, features = ["alloc"], optional = true }
scale-info = { version = "0.3", default-features = false, features = ["derive"], optional = true }

# Workaround: we actually just need criterion as a dev-dependency, but
# there is an issue with a doubly included std lib when executing
# `cargo check --no-default-features --target wasm32-unknown-unknown`.
# We haven't found a better solution yet.
criterion = { version = "0.3", optional = true }

[dev-dependencies]
quickcheck = "0.9"
quickcheck_macros = "0.8"
itertools = "0.9"

[features]
default = ["std"]
std = [
    "criterion",
    "ink_metadata",
    "ink_metadata/std",
    "ink_alloc/std",
    "ink_prelude/std",
    "ink_primitives/std",
    "scale/std",
    "scale-info",
    "scale-info/std",
    "rand",
    "rand/std",
    "num-traits/std",
    # Enables hashing crates for off-chain environment.
    "sha2",
    "sha3",
    "blake2",
]
ink-fuzz-tests = ["std"]
ink-unstable-chain-extensions = []

[[bench]]
name = "bench_lazy"
harness = false

[[bench]]
name = "bench_vec"
harness = false

[[bench]]
name = "bench_stash"
harness = false

[[bench]]
name = "bench_bitstash"
harness = false

[[bench]]
name = "bench_hashmap"
harness = false
