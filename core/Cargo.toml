[package]
name = "ink_core"
version = "0.1.0"
authors = ["Parity Technologies <admin@parity.io>"]
edition = "2018"

license = "GPL-3.0"
readme = "README.md"

repository = "https://github.com/paritytech/ink"
documentation = "https://github.com/paritytech/ink/wiki"
homepage = "https://www.parity.io/"

description = "[ink!] Rust based eDSL for writing smart contracts for Substrate"
keywords = ["wasm", "parity", "webassembly", "blockchain", "edsl"]
categories = ["no-std", "embedded"]

include = ["/Cargo.toml", "src/**/*.rs", "/README.md", "/LICENSE"]

[dependencies]
ink_alloc = { path = "../alloc/" }
ink_utils = { path = "../utils/" }
parity-codec = { version = "4.1.1", default-features = false, features = ["derive", "full"] }

[dev-dependencies]
balances = { git = "https://github.com/paritytech/substrate/", package = "srml-balances", default_features = false }
contracts = { git = "https://github.com/paritytech/substrate/", package = "srml-contracts", default_features = false, features = ["core"] }
timestamp = { git = "https://github.com/paritytech/substrate/", package = "srml-timestamp", default_features = false }
srml-support = { git = "https://github.com/paritytech/substrate/", package = "srml-support", default_features = false }
system = { git = "https://github.com/paritytech/substrate/", package = "srml-system", default_features = false }
runtime-primitives = { git = "https://github.com/paritytech/substrate/", package = "sr-primitives", default_features = false }
substrate-primitives = { git = "https://github.com/paritytech/substrate/", package = "substrate-primitives", default_features = false }
runtime-io = { git = "https://github.com/paritytech/substrate/", package = "sr-io", default_features = false, features = ["no_oom", "no_panic_handler"] }

[features]
default = []
test-env = ["std"]
std = [
    "ink_alloc/std",
    "ink_utils/std",
    "balances/std",
    "contracts/std",
    "timestamp/std",
    "srml-support/std",
    "system/std",
    "runtime-primitives/std",
    "substrate-primitives/std",
    "runtime-io/std",
]
